// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApi.Models;

#nullable disable

namespace ServerApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240515164046_InitDataApi")]
    partial class InitDataApi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServerApi.Models.CategoryDto", b =>
                {
                    b.Property<int>("MaLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoai"));

                    b.Property<string>("Hinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLoaiAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoai");

                    b.ToTable("categoryDtos");
                });

            modelBuilder.Entity("ServerApi.Models.FactoryDto", b =>
                {
                    b.Property<int>("MaNCC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNCC"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiLienLac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCongTy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNCC");

                    b.ToTable("factoryDtos");
                });

            modelBuilder.Entity("ServerApi.Models.InvoiceDetailDto", b =>
                {
                    b.Property<int>("MaCT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCT"));

                    b.Property<double>("DonGia")
                        .HasColumnType("float");

                    b.Property<double>("GiamGia")
                        .HasColumnType("float");

                    b.Property<int>("HangHoaMaHH")
                        .HasColumnType("int");

                    b.Property<int>("HoaDonMaHD")
                        .HasColumnType("int");

                    b.Property<int>("MaHD")
                        .HasColumnType("int");

                    b.Property<int>("MaHH")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaCT");

                    b.HasIndex("HangHoaMaHH");

                    b.HasIndex("HoaDonMaHD");

                    b.ToTable("invoiceDetailDtos");
                });

            modelBuilder.Entity("ServerApi.Models.InvoiceDto", b =>
                {
                    b.Property<int>("MaHD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHD"));

                    b.Property<string>("CachThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CachVanChuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaTrangThai")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayGiao")
                        .HasColumnType("datetime2");

                    b.Property<double>("PhiVanChuyen")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MaHD");

                    b.HasIndex("UserId");

                    b.ToTable("invoiceDtos");
                });

            modelBuilder.Entity("ServerApi.Models.ProductDto", b =>
                {
                    b.Property<int>("MaHH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHH"));

                    b.Property<double?>("DonGia")
                        .HasColumnType("float");

                    b.Property<string>("DongCoCongNghe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GiamGia")
                        .HasColumnType("float");

                    b.Property<string>("Hinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaLoai")
                        .HasColumnType("int");

                    b.Property<int>("MaLoaiNavigationMaLoai")
                        .HasColumnType("int");

                    b.Property<string>("MaNCC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaNccNavigationMaNCC")
                        .HasColumnType("int");

                    b.Property<int>("MaTSKT")
                        .HasColumnType("int");

                    b.Property<int>("MaTSKTNavigationMaTSKT")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTaDonVi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySX")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLanXem")
                        .HasColumnType("int");

                    b.Property<string>("TenAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThietKe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TienIchAnToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHH");

                    b.HasIndex("MaLoaiNavigationMaLoai");

                    b.HasIndex("MaNccNavigationMaNCC");

                    b.HasIndex("MaTSKTNavigationMaTSKT");

                    b.ToTable("productDtos");
                });

            modelBuilder.Entity("ServerApi.Models.UserDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("userDtos");
                });

            modelBuilder.Entity("ServerApi.Models.specificationsDto", b =>
                {
                    b.Property<int>("MaTSKT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTSKT"));

                    b.Property<string>("CongSuatToiDa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DaiRongCao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoCaoYen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DungTichBinhXang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DungTichNhotMay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DungTichXYLanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DuongKinhHanhTrinhPiston")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeThongKhoiDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoangCachTrucXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoangSangGamXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoiLuongBanThan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KichThuocLopTruocSau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiDongCo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiTruyenDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MomentCucDai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MucTieuThuNhienLieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhuocSau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhuocTruoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TySoNen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTSKT");

                    b.ToTable("specificationsDtos");
                });

            modelBuilder.Entity("ServerApi.Models.InvoiceDetailDto", b =>
                {
                    b.HasOne("ServerApi.Models.ProductDto", "HangHoa")
                        .WithMany("ChiTietHds")
                        .HasForeignKey("HangHoaMaHH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApi.Models.InvoiceDto", "HoaDon")
                        .WithMany("InvoiceDetailDto")
                        .HasForeignKey("HoaDonMaHD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HangHoa");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("ServerApi.Models.InvoiceDto", b =>
                {
                    b.HasOne("ServerApi.Models.UserDto", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ServerApi.Models.ProductDto", b =>
                {
                    b.HasOne("ServerApi.Models.CategoryDto", "MaLoaiNavigation")
                        .WithMany("HangHoas")
                        .HasForeignKey("MaLoaiNavigationMaLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApi.Models.FactoryDto", "MaNccNavigation")
                        .WithMany()
                        .HasForeignKey("MaNccNavigationMaNCC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerApi.Models.specificationsDto", "MaTSKTNavigation")
                        .WithMany()
                        .HasForeignKey("MaTSKTNavigationMaTSKT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaLoaiNavigation");

                    b.Navigation("MaNccNavigation");

                    b.Navigation("MaTSKTNavigation");
                });

            modelBuilder.Entity("ServerApi.Models.CategoryDto", b =>
                {
                    b.Navigation("HangHoas");
                });

            modelBuilder.Entity("ServerApi.Models.InvoiceDto", b =>
                {
                    b.Navigation("InvoiceDetailDto");
                });

            modelBuilder.Entity("ServerApi.Models.ProductDto", b =>
                {
                    b.Navigation("ChiTietHds");
                });
#pragma warning restore 612, 618
        }
    }
}
